version: '3.8'

services:
  trainingagent:
    build:
      context: .
      dockerfile: Dockerfile
    image: trainingagent:latest
    container_name: trainingagent-app
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - trainingagent-network
    depends_on:
      - trainingagent-db
    healthcheck:
      test: ["CMD", "dotnet", "TrainingAgent.dll", "--health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  trainingagent-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: trainingagent-database
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - trainingagent-db-data:/var/opt/mssql
    networks:
      - trainingagent-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong!Passw0rd -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  trainingagent-redis:
    image: redis:7-alpine
    container_name: trainingagent-cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - trainingagent-redis-data:/data
    networks:
      - trainingagent-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    command: redis-server --appendonly yes

volumes:
  trainingagent-db-data:
    driver: local
  trainingagent-redis-data:
    driver: local

networks:
  trainingagent-network:
    driver: bridge
